{"entries":[{"timestamp":1729529411331,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":75},{"diffs":[[0,"ver\""],[-1," x=\"0\" y=\"0\""],[0,"></b"]],"start1":107,"start2":107,"length1":20,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let latestCommands: { [key: string]: number } = {}\nlet led1 = false;\nlet led2 = false;\n\nbasic.clearScreen()\n\nbluetooth.startUartService()\n\nbluetooth.onBluetoothConnected(function () {\n})\n\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    let command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    let commadParts = command.split(\"=\")\n\n    latestCommands[commadParts[0]] = parseFloat(commadParts[1])\n})\n\nbasic.forever(function () {\n    while (Object.keys(latestCommands).length) {\n        let commandName = Object.keys(latestCommands)[0]\n        let commandValue = latestCommands[commandName]\n        delete latestCommands[commandName];\n\n        if (commandName == \"-v\") {\n\n        } else if (commandName == \"1\") {\n            getData()\n        }\n    }\n})\n\nfunction getData() {\n    dht11_dht22.queryData(DHTtype.DHT11, DigitalPin.P0, true, false, true)\n    let temperature = dht11_dht22.readData(dataType.temperature)\n    let humidity = dht11_dht22.readData(dataType.humidity)\n    let out = [input.runningTime(), input.temperature(), temperature, humidity]\n    bluetooth.uartWriteString(\"\" + out.join(',') + '\\n')\n    basic.showNumber(humidity)\n}\n\nbasic.forever(function () {\n    getData()\n    basic.pause(10000)\n})"],[1,"\n"]],"start1":0,"start2":0,"length1":1272,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"microphone"],[1,"radio"],[0,"\": \""]],"start1":94,"start2":94,"length1":18,"length2":13},{"diffs":[[0,"   \""],[-1,"bluetooth\": \"*\",\n        \"pxt-DHT11_DHT22\": \"github:alankrantas/pxt-dht11_dht22#v0.0.3"],[1,"microphone\": \"*"],[0,"\"\n  "]],"start1":116,"start2":116,"length1":94,"length2":23},{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }"],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":229,"start2":229,"length1":287,"length2":31}]}]},{"timestamp":1729529453372,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"DHTtype."],[1,"DHT11"],[0,", Digita"]],"start1":861,"start2":861,"length1":16,"length2":21}]}]},{"timestamp":1729539749269,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ype."],[-1,"DHT22"],[0,", Di"]],"start1":865,"start2":865,"length1":13,"length2":8}]}]},{"timestamp":1729539751168,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"type.DHT"],[-1,"11"],[1,"22"],[0,", Digita"]],"start1":864,"start2":864,"length1":18,"length2":18},{"diffs":[[0,"\n   "],[-1," //"],[0," bas"]],"start1":1170,"start2":1170,"length1":11,"length2":8},{"diffs":[[0,"use("],[-1,"3"],[1,"10"],[0,"000)"]],"start1":1259,"start2":1259,"length1":9,"length2":10}]}]},{"timestamp":1729540157064,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"in.P"],[-1,"7"],[1,"0"],[0,", tr"]],"start1":884,"start2":884,"length1":9,"length2":9}]}]},{"timestamp":1729623411295,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"in.P"],[-1,"6"],[1,"7"],[0,", tr"]],"start1":884,"start2":884,"length1":9,"length2":9}]}]},{"timestamp":1729623521147,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"talPin.P"],[-1,"1"],[1,"6"],[0,", true, "]],"start1":880,"start2":880,"length1":17,"length2":17}]}]},{"timestamp":1729624560888,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," false;\n"],[-1,"let temperature"],[0,"\nbasic.c"]],"start1":79,"start2":79,"length1":31,"length2":16}]}]},{"timestamp":1729625079378,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ture"],[-1," = 0;\nlet humidity = 0;\n"],[0,"\nbas"]],"start1":98,"start2":98,"length1":32,"length2":8},{"diffs":[[0,"ue)\n"],[-1,"    \n"],[0,"    "]],"start1":921,"start2":921,"length1":13,"length2":8},{"diffs":[[0,"let temp"],[1,"erature"],[0," = dht11"]],"start1":929,"start2":929,"length1":16,"length2":23},{"diffs":[[0,"re)\n"],[-1,"    if (temp != -999) {\n        temperature = temp\n    }\n\n"],[0,"    "]],"start1":986,"start2":986,"length1":66,"length2":8},{"diffs":[[0,"let humi"],[1,"dity"],[0," = dht11"]],"start1":994,"start2":994,"length1":16,"length2":20},{"diffs":[[0,"ty)\n"],[-1,"    if (humi != -999) {\n        humidity = humi\n    }\n"],[0,"    "]],"start1":1045,"start2":1045,"length1":62,"length2":8},{"diffs":[[0,"c.pause("],[-1,"2"],[1,"3"],[0,"000)\n})"]],"start1":1273,"start2":1273,"length1":16,"length2":16}]}]},{"timestamp":1729625207278,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"1])\n})\n\n"],[-1,"// "],[0,"basic.fo"]],"start1":492,"start2":492,"length1":19,"length2":16},{"diffs":[[0,"nction () {\n"],[-1,"// "],[0,"    while (O"]],"start1":516,"start2":516,"length1":27,"length2":24},{"diffs":[[0,").length) {\n"],[-1,"// "],[0,"        let "]],"start1":565,"start2":565,"length1":27,"length2":24},{"diffs":[[0,"nds)[0]\n"],[-1,"// "],[0,"        "]],"start1":626,"start2":626,"length1":19,"length2":16},{"diffs":[[0,"ndName]\n"],[-1,"// "],[0,"        "]],"start1":681,"start2":681,"length1":19,"length2":16},{"diffs":[[0,"Name];\n\n"],[-1,"//"],[0,"        "],[-1," "],[0,"if (comm"]],"start1":726,"start2":726,"length1":27,"length2":24},{"diffs":[[0,"-v\") {\n\n"],[-1,"// "],[0,"        "]],"start1":762,"start2":762,"length1":19,"length2":16},{"diffs":[[0," \"1\") {\n"],[-1,"// "],[0,"        "]],"start1":803,"start2":803,"length1":19,"length2":16},{"diffs":[[0,"tData()\n"],[-1,"// "],[0,"        "]],"start1":825,"start2":825,"length1":19,"length2":16},{"diffs":[[0,"  }\n"],[-1,"//"],[0,"    "],[-1," "],[0,"}\n"],[-1,"// "],[0,"})\n\n"]],"start1":839,"start2":839,"length1":20,"length2":14}]}]},{"timestamp":1729682683852,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,") {\n})\n\n"],[-1,"// "],[0,"bluetoot"]],"start1":219,"start2":219,"length1":19,"length2":16},{"diffs":[[0,"nction () {\n"],[-1,"// "],[0,"    let comm"]],"start1":297,"start2":297,"length1":27,"length2":24},{"diffs":[[0,"wLine))\n"],[-1,"//"],[0,"    "],[-1," "],[0,"let comm"]],"start1":382,"start2":382,"length1":23,"length2":20},{"diffs":[[0,"t(\"=\")\n\n"],[-1,"// "],[0,"    late"]],"start1":424,"start2":424,"length1":19,"length2":16},{"diffs":[[0,"rts[1])\n"],[-1,"// "],[0,"})\n\n// b"]],"start1":488,"start2":488,"length1":19,"length2":16}]}]},{"timestamp":1729682709248,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"vice()\n\n"],[-1,"// "],[0,"bluetoot"]],"start1":170,"start2":170,"length1":19,"length2":16},{"diffs":[[0,"on () {\n"],[-1,"// "],[0,"})\n\n// b"]],"start1":215,"start2":215,"length1":19,"length2":16},{"diffs":[[0,") {\n"],[-1,"    try {\n    "],[0,"    "]],"start1":918,"start2":918,"length1":22,"length2":8},{"diffs":[[0,", true)\n"],[-1,"\n"],[0,"    "],[1,"\n"],[0,"    let "]],"start1":989,"start2":989,"length1":21,"length2":21},{"diffs":[[0,"rature)\n    "],[-1,"  "],[-1,"  "],[0,"if (temp != "]],"start1":1052,"start2":1052,"length1":28,"length2":24},{"diffs":[[0,"        "],[-1,"    "],[0,"temperat"]],"start1":1084,"start2":1084,"length1":20,"length2":16},{"diffs":[[0,"    "],[-1,"   "],[-1," "],[0,"}\n\n"],[-1,"    "],[0,"    "]],"start1":1111,"start2":1111,"length1":19,"length2":11},{"diffs":[[0,"midity)\n    "],[-1,"   "],[-1," "],[0,"if (humi != "]],"start1":1165,"start2":1165,"length1":28,"length2":24},{"diffs":[[0,"        "],[-1,"    "],[0,"humidity"]],"start1":1197,"start2":1197,"length1":20,"length2":16},{"diffs":[[0,"umi\n"],[-1,"    "],[0,"    }\n"],[-1,"    } catch(err) {}\n    \n"],[0,"    "]],"start1":1217,"start2":1217,"length1":43,"length2":14}]}]},{"timestamp":1729682794586,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"use("],[-1,"5"],[1,"2"],[0,"000)"]],"start1":1528,"start2":1528,"length1":9,"length2":9}]}]},{"timestamp":1729701045053,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"c.pause("],[-1,"1"],[1,"5"],[0,"000)\n})"]],"start1":1524,"start2":1524,"length1":16,"length2":16}]}]},{"timestamp":1729701057913,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,": \"Humid"],[-1,"ity"],[0,"\",\n    \""]],"start1":12,"start2":12,"length1":19,"length2":16}]}]},{"timestamp":1730659687781,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"Humidity"],[-1," "],[0,"\",\n    \""]],"start1":15,"start2":15,"length1":17,"length2":16}]}]},{"timestamp":1730659688722,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"device_forever\" x=\"0\" y=\"0\"></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":62}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"\": \""],[-1,"DHT11 - humidity and temperature"],[1,"Humidity "],[0,"\",\n "]],"start1":11,"start2":11,"length1":40,"length2":17},{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":304,"start2":304,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1729529411330,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Humid\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1729539749269,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"0\" y=\"0\"></block></xml>","main.ts":"let latestCommands: { [key: string]: number } = {}\nlet led1 = false;\nlet led2 = false;\n\nbasic.clearScreen()\n\nbluetooth.startUartService()\n\nbluetooth.onBluetoothConnected(function () {\n})\n\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    let command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    let commadParts = command.split(\"=\")\n\n    latestCommands[commadParts[0]] = parseFloat(commadParts[1])\n})\n\nbasic.forever(function () {\n    while (Object.keys(latestCommands).length) {\n        let commandName = Object.keys(latestCommands)[0]\n        let commandValue = latestCommands[commandName]\n        delete latestCommands[commandName];\n\n        if (commandName == \"-v\") {\n\n        } else if (commandName == \"1\") {\n            getData()\n        }\n    }\n})\n\nfunction getData() {\n    dht11_dht22.queryData(DHTtype.DHT11, DigitalPin.P0, true, false, true)\n    let temperature = dht11_dht22.readData(dataType.temperature)\n    let humidity = dht11_dht22.readData(dataType.humidity)\n    let out = [input.runningTime(), input.temperature(), temperature, humidity]\n    bluetooth.uartWriteString(\"\" + out.join(',') + '\\n')\n    basic.showNumber(humidity)\n}\n\nbasic.forever(function () {\n    getData()\n    basic.pause(10000)\n})","README.md":"","pxt.json":"{\n    \"name\": \"Humid\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"microphone\": \"*\",\n        \"bluetooth\": \"*\",\n        \"pxt-DHT11_DHT22\": \"github:alankrantas/pxt-dht11_dht22#v0.0.3\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }\n}\n"}},{"timestamp":1729623411295,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"0\" y=\"0\"></block></xml>","main.ts":"let latestCommands: { [key: string]: number } = {}\nlet led1 = false;\nlet led2 = false;\n\nbasic.clearScreen()\n\nbluetooth.startUartService()\n\nbluetooth.onBluetoothConnected(function () {\n})\n\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    let command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    let commadParts = command.split(\"=\")\n\n    latestCommands[commadParts[0]] = parseFloat(commadParts[1])\n})\n\nbasic.forever(function () {\n    while (Object.keys(latestCommands).length) {\n        let commandName = Object.keys(latestCommands)[0]\n        let commandValue = latestCommands[commandName]\n        delete latestCommands[commandName];\n\n        if (commandName == \"-v\") {\n\n        } else if (commandName == \"1\") {\n            getData()\n        }\n    }\n})\n\nfunction getData() {\n    dht11_dht22.queryData(DHTtype.DHT11, DigitalPin.P0, true, false, true)\n    let temperature = dht11_dht22.readData(dataType.temperature)\n    let humidity = dht11_dht22.readData(dataType.humidity)\n    let out = [input.runningTime(), input.temperature(), temperature, humidity]\n    bluetooth.uartWriteString(\"\" + out.join(',') + '\\n')\n    // basic.showNumber(humidity)\n}\n\nbasic.forever(function () {\n    getData()\n    basic.pause(3000)\n})","README.md":"","pxt.json":"{\n    \"name\": \"Humid\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"microphone\": \"*\",\n        \"bluetooth\": \"*\",\n        \"pxt-DHT11_DHT22\": \"github:alankrantas/pxt-dht11_dht22#v0.0.3\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }\n}\n"}},{"timestamp":1729701045053,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"0\" y=\"0\"></block></xml>","main.ts":"let latestCommands: { [key: string]: number } = {}\nlet led1 = false;\nlet led2 = false;\nlet temperature = 0;\nlet humidity = 0;\n\nbasic.clearScreen()\n\nbluetooth.startUartService()\n\n// bluetooth.onBluetoothConnected(function () {\n// })\n\n// bluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n//     let command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n//     let commadParts = command.split(\"=\")\n\n//     latestCommands[commadParts[0]] = parseFloat(commadParts[1])\n// })\n\n// basic.forever(function () {\n//     while (Object.keys(latestCommands).length) {\n//         let commandName = Object.keys(latestCommands)[0]\n//         let commandValue = latestCommands[commandName]\n//         delete latestCommands[commandName];\n\n//         if (commandName == \"-v\") {\n\n//         } else if (commandName == \"1\") {\n//             getData()\n//         }\n//     }\n// })\n\nfunction getData() {\n    try {\n        dht11_dht22.queryData(DHTtype.DHT11, DigitalPin.P1, true, false, true)\n\n        let temp = dht11_dht22.readData(dataType.temperature)\n        if (temp != -999) {\n            temperature = temp\n        }\n\n        let humi = dht11_dht22.readData(dataType.humidity)\n        if (humi != -999) {\n            humidity = humi\n        }\n    } catch(err) {}\n    \n    let out = [input.runningTime(), input.temperature(), temperature, humidity]\n    bluetooth.uartWriteString(\"\" + out.join(',') + '\\n')\n    // basic.showNumber(humidity)\n}\n\nbasic.forever(function () {\n    getData()\n    basic.pause(2000)\n})","README.md":"","pxt.json":"{\n    \"name\": \"Humid\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"microphone\": \"*\",\n        \"bluetooth\": \"*\",\n        \"pxt-DHT11_DHT22\": \"github:alankrantas/pxt-dht11_dht22#v0.0.3\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }\n}\n"}},{"timestamp":1730659687781,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"0\" y=\"0\"></block></xml>","main.ts":"let latestCommands: { [key: string]: number } = {}\nlet led1 = false;\nlet led2 = false;\nlet temperature = 0;\nlet humidity = 0;\n\nbasic.clearScreen()\n\nbluetooth.startUartService()\n\n// bluetooth.onBluetoothConnected(function () {\n// })\n\n// bluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n//     let command = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n//     let commadParts = command.split(\"=\")\n\n//     latestCommands[commadParts[0]] = parseFloat(commadParts[1])\n// })\n\n// basic.forever(function () {\n//     while (Object.keys(latestCommands).length) {\n//         let commandName = Object.keys(latestCommands)[0]\n//         let commandValue = latestCommands[commandName]\n//         delete latestCommands[commandName];\n\n//         if (commandName == \"-v\") {\n\n//         } else if (commandName == \"1\") {\n//             getData()\n//         }\n//     }\n// })\n\nfunction getData() {\n    try {\n        dht11_dht22.queryData(DHTtype.DHT11, DigitalPin.P1, true, false, true)\n\n        let temp = dht11_dht22.readData(dataType.temperature)\n        if (temp != -999) {\n            temperature = temp\n        }\n\n        let humi = dht11_dht22.readData(dataType.humidity)\n        if (humi != -999) {\n            humidity = humi\n        }\n    } catch(err) {}\n    \n    let out = [input.runningTime(), input.temperature(), temperature, humidity]\n    bluetooth.uartWriteString(\"\" + out.join(',') + '\\n')\n    // basic.showNumber(humidity)\n}\n\nbasic.forever(function () {\n    getData()\n    basic.pause(1000)\n})","README.md":"","pxt.json":"{\n    \"name\": \"Humid\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"microphone\": \"*\",\n        \"bluetooth\": \"*\",\n        \"pxt-DHT11_DHT22\": \"github:alankrantas/pxt-dht11_dht22#v0.0.3\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"whitelist\": 0,\n                    \"security_level\": null\n                }\n            }\n        }\n    }\n}\n"}}],"shares":[],"lastSaveTime":1730659733652}